## Import trimmed, filtered HL1 reads from the taxonomy analysis workflow (automatically done)


## Perform de novo assembly of reads using MEGAHIT assembler
## Could perform assembly one at a time, but it took over 3 hours on 8 samples, so we'll do 1 here

megahit -1 HL1_trimmed/HL1_R1_paired.fastq.gz -2 HL1_trimmed/HL1_R2_paired.fastq.gz -o ~/HL1_megahit_output


## Copy assembly output into folder with other sample contigs files (assembly on them was pre-done)

cp ~/HL1_megahit_output/final.contigs.fa ~/HL_final_contigs/HL1_final.contigs.fa


## Run Prokka on HL1

prokka --metagenome --outdir HL1_prokka --prefix HL1 HL_final_contigs/HL1_final.contigs.fa
prokka --metagenome --outdir HL2_prokka --prefix HL2 HL_final_contigs/HL2_final.contigs.fa
prokka --metagenome --outdir HL3_prokka --prefix HL3 HL_final_contigs/HL3_final.contigs.fa
prokka --metagenome --outdir HL4_prokka --prefix HL4 HL_final_contigs/HL4_final.contigs.fa
prokka --metagenome --outdir HL5_prokka --prefix HL5 HL_final_contigs/HL5_final.contigs.fa
prokka --metagenome --outdir HL6_prokka --prefix HL6 HL_final_contigs/HL6_final.contigs.fa
prokka --metagenome --outdir HL7_prokka --prefix HL7 HL_final_contigs/HL7_final.contigs.fa
prokka --metagenome --outdir HL8_prokka --prefix HL8 HL_final_contigs/HL8_final.contigs.fa



## Subset prokka outputs that were given an enzyme identifiers

grep "eC_number=" HL1_prokka/HL1.gff | cut -f9 | cut -f1,2 -d ';'| sed 's/ID=//g'| sed 's/;eC_number=/\t/g' > PROKKA.HL1.ec
grep "eC_number=" HL2_prokka/HL2.gff | cut -f9 | cut -f1,2 -d ';'| sed 's/ID=//g'| sed 's/;eC_number=/\t/g' > PROKKA.HL2.ec
grep "eC_number=" HL3_prokka/HL3.gff | cut -f9 | cut -f1,2 -d ';'| sed 's/ID=//g'| sed 's/;eC_number=/\t/g' > PROKKA.HL3.ec
grep "eC_number=" HL4_prokka/HL4.gff | cut -f9 | cut -f1,2 -d ';'| sed 's/ID=//g'| sed 's/;eC_number=/\t/g' > PROKKA.HL4.ec
grep "eC_number=" HL5_prokka/HL5.gff | cut -f9 | cut -f1,2 -d ';'| sed 's/ID=//g'| sed 's/;eC_number=/\t/g' > PROKKA.HL5.ec
grep "eC_number=" HL6_prokka/HL6.gff | cut -f9 | cut -f1,2 -d ';'| sed 's/ID=//g'| sed 's/;eC_number=/\t/g' > PROKKA.HL6.ec
grep "eC_number=" HL7_prokka/HL7.gff | cut -f9 | cut -f1,2 -d ';'| sed 's/ID=//g'| sed 's/;eC_number=/\t/g' > PROKKA.HL7.ec
grep "eC_number=" HL8_prokka/HL8.gff | cut -f9 | cut -f1,2 -d ';'| sed 's/ID=//g'| sed 's/;eC_number=/\t/g' > PROKKA.HL8.ec



## Subset prokka outputs that have Clusters of Orthologous Genes (COG) identifiers

egrep "COG[0-9]{4}" HL1_prokka/HL1.gff | cut -f9 | sed 's/.\+COG\([0-9]\+\);locus_tag=\(PROKKA_[0-9]\+\);.\+/\2\tCOG\1/g' > PROKKA.HL1.cog
egrep "COG[0-9]{4}" HL2_prokka/HL2.gff | cut -f9 | sed 's/.\+COG\([0-9]\+\);locus_tag=\(PROKKA_[0-9]\+\);.\+/\2\tCOG\1/g' > PROKKA.HL2.cog
egrep "COG[0-9]{4}" HL3_prokka/HL3.gff | cut -f9 | sed 's/.\+COG\([0-9]\+\);locus_tag=\(PROKKA_[0-9]\+\);.\+/\2\tCOG\1/g' > PROKKA.HL3.cog
egrep "COG[0-9]{4}" HL4_prokka/HL4.gff | cut -f9 | sed 's/.\+COG\([0-9]\+\);locus_tag=\(PROKKA_[0-9]\+\);.\+/\2\tCOG\1/g' > PROKKA.HL4.cog
egrep "COG[0-9]{4}" HL5_prokka/HL5.gff | cut -f9 | sed 's/.\+COG\([0-9]\+\);locus_tag=\(PROKKA_[0-9]\+\);.\+/\2\tCOG\1/g' > PROKKA.HL5.cog
egrep "COG[0-9]{4}" HL6_prokka/HL6.gff | cut -f9 | sed 's/.\+COG\([0-9]\+\);locus_tag=\(PROKKA_[0-9]\+\);.\+/\2\tCOG\1/g' > PROKKA.HL6.cog
egrep "COG[0-9]{4}" HL7_prokka/HL7.gff | cut -f9 | sed 's/.\+COG\([0-9]\+\);locus_tag=\(PROKKA_[0-9]\+\);.\+/\2\tCOG\1/g' > PROKKA.HL7.cog
egrep "COG[0-9]{4}" HL8_prokka/HL8.gff | cut -f9 | sed 's/.\+COG\([0-9]\+\);locus_tag=\(PROKKA_[0-9]\+\);.\+/\2\tCOG\1/g' > PROKKA.HL8.cog


